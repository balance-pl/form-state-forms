{"version":3,"sources":["components/InputDate/styles.module.scss","icons/IconCalendar.jsx","components/InputDate/index.jsx","forms/EmployeeInfoForm/index.jsx"],"names":["module","exports","IconCalendar","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","x","y","rx","ry","x1","y1","x2","y2","InputDate","styles","Input","mask","InputDate__Icon","defaultProps","error","value","onBlur","onChange","name","data","onFocus","INITIAL_STATE","createFormState","address","createFormField","birthday","validations","Validations","required","email","employerName","gender","patronymic","phone","surname","EmployeeInfoForm","useFormState","state","actions","handleBlur","isValidated","validateState","handleChange","field","changeField","useEffect","autoComplete","onSubmit","e","preventDefault","isValid","alert","H","size","FormRow","InputSuggest","getOptionsMethod","getSurnames","label","getNames","getPatronymics","SelectBox","options","id","getAddresses","getCompanies","Button","variant"],"mappings":"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","file":"static/js/7.c62289d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputDate\":\"styles_InputDate__3Gfzb\",\"InputDate__Icon\":\"styles_InputDate__Icon__3m_hb\"};","function IconCalendar(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather feather-calendar\"\n    >\n      <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" {...props}></rect>\n      <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n      <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n      <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n    </svg>\n  )\n}\n\nexport default IconCalendar\n","import PropTypes from 'prop-types'\n\n// Components\nimport Input from '../Input'\n\n// Icons\nimport IconCalendar from '../../icons/IconCalendar'\n\nimport styles from './styles.module.scss'\n\nfunction InputDate(props) {\n  return (\n    <div className={styles.InputDate}>\n      <Input {...props} mask=\"99.99.9999\" />\n      <div className={styles.InputDate__Icon}>\n        <IconCalendar />\n      </div>\n    </div>\n  )\n}\n\nInputDate.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\nInputDate.defaultProps = {\n  error: null,\n  mask: null,\n  value: null,\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputDate\n","import { useEffect } from 'react'\n\nimport {\n  createFormField,\n  createFormState,\n  FormField,\n  FormStateProvider,\n  useFormState,\n  Validations,\n} from '@balance-pl/form-state'\n\n// API\nimport {\n  getAddresses,\n  getCompanies,\n  getNames,\n  getPatronymics,\n  getSurnames,\n} from '../../api/dadata'\n\n// Components\nimport Button from '../../components/Button'\nimport FormRow from '../../components/FormRow'\nimport { Col, Row } from '../../components/Grid'\nimport H from '../../components/H'\nimport Input from '../../components/Input'\nimport InputDate from '../../components/InputDate'\nimport InputSuggest from '../../components/InputSuggest'\nimport SelectBox from '../../components/SelectBox'\n\nconst INITIAL_STATE = createFormState({\n  address: createFormField(),\n  birthday: createFormField({\n    validations: [Validations.required],\n  }),\n  email: createFormField(),\n  employerName: createFormField(),\n  gender: createFormField({\n    validations: [Validations.required],\n  }),\n  name: createFormField({\n    validations: [Validations.required],\n  }),\n  patronymic: createFormField(),\n  phone: createFormField(),\n  surname: createFormField({\n    validations: [Validations.required],\n  }),\n})\n\nfunction EmployeeInfoForm() {\n  const [state, actions] = useFormState(INITIAL_STATE)\n\n  // Effects\n  useEffect(() => {\n    if (state.isValidated) {\n      actions.validateState(state)\n    }\n  }, [state.gender.value])\n\n  // Handlers\n  function handleBlur() {\n    if (state.isValidated) {\n      actions.validateState(state)\n    }\n  }\n  function handleChange(value, { name: field }) {\n    actions.changeField(field, value)\n  }\n  function handleSubmit(e) {\n    e.preventDefault()\n    const validatedState = actions.validateState(state)\n    if (validatedState.isValid()) {\n      alert('Sending the form...')\n    }\n  }\n\n  return (\n    <FormStateProvider state={state}>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <H size=\"1\">Информация о сотруднике</H>\n        <FormField field={state.surname}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getSurnames}\n                label=\"Фамилия *\"\n                name=\"surname\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.name}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getNames}\n                label=\"Имя *\"\n                name=\"name\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.patronymic}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getPatronymics}\n                label=\"Отчество\"\n                name=\"patronymic\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <Row>\n          <FormField field={state.gender}>\n            {(value, { error }) => (\n              <Col>\n                <FormRow>\n                  <SelectBox\n                    error={error}\n                    label=\"Пол *\"\n                    name=\"gender\"\n                    options={[\n                      { id: 'male', name: 'мужской' },\n                      { id: 'female', name: 'женский' },\n                    ]}\n                    value={value}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              </Col>\n            )}\n          </FormField>\n          <FormField field={state.birthday}>\n            {(value, { error }) => (\n              <Col>\n                <FormRow>\n                  <InputDate\n                    error={error}\n                    label=\"Дата рождения *\"\n                    name=\"birthday\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              </Col>\n            )}\n          </FormField>\n          <FormField field={state.phone}>\n            {(value, { error }) => (\n              <Col>\n                <FormRow>\n                  <Input\n                    error={error}\n                    label=\"Мобильный телефон *\"\n                    mask=\"+7 (999) 999-99-99\"\n                    name=\"phone\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              </Col>\n            )}\n          </FormField>\n          <FormField field={state.email}>\n            {(value, { error }) => (\n              <Col>\n                <FormRow>\n                  <Input\n                    error={error}\n                    label=\"Email\"\n                    name=\"email\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              </Col>\n            )}\n          </FormField>\n        </Row>\n        <FormField field={state.address}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getAddresses}\n                label=\"Адрес постоянной регистрации\"\n                name=\"address\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.employerName}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getCompanies}\n                label=\"Наименование работодателя\"\n                name=\"employerName\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\">Сохранить</Button>\n          </Col>\n        </Row>\n      </form>\n    </FormStateProvider>\n  )\n}\n\nexport default EmployeeInfoForm\n"],"sourceRoot":""}