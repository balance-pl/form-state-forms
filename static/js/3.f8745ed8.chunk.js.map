{"version":3,"sources":["components/Input/index.jsx","components/Button/index.jsx","components/Button/styles.module.scss","components/FormRow/index.jsx","components/FormRow/styles.module.scss","components/H/index.jsx","components/H/styles.module.scss","components/Input/styles.module.scss","components/Grid/styles.module.scss","components/InputDate/styles.module.scss","components/Suggest/option.module.scss","components/Suggest/suggest.module.scss","components/InputSuggest/styles.module.scss","components/SelectBox/styles.module.scss","api/dadata.js","components/Grid/Col.jsx","components/Grid/Row.jsx","icons/IconCalendar.jsx","components/InputDate/index.jsx","components/Suggest/option.jsx","components/Suggest/suggest.jsx","components/Suggest/index.js","components/InputSuggest/index.jsx","icons/IconCode.jsx","components/SelectBox/index.jsx","forms/EmployeeInfoForm/index.jsx"],"names":["Input","props","error","label","mask","value","onBlur","onChange","onFocus","otherProps","useState","hasFocus","setHasFocus","inputClass","cn","styles","Input__Input","Input__Input_error","labelTextClass","Input__LabelText","Input__LabelText_top","inputProps","className","e","target","Input__Label","Input__Error","defaultProps","name","data","Button","children","variant","module","exports","FormRow","H","size","getDadataCall","type","query","count","part","fetch","headers","method","body","JSON","stringify","parts","undefined","then","response","json","suggestions","map","item","index","id","catch","console","log","getAddresses","getCompanies","getNames","getPatronymics","getSurnames","Col","Row","IconCalendar","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","x1","y1","x2","y2","InputDate","InputDate__Icon","Option","isActive","isValue","onClick","onMouseOver","componentClass","Option_active","Option_value","preventDefault","Suggest","activeOptionId","optionSearchMask","options","formatOption","onItemHover","handleOptionClick","find","o","handleMouseOver","optionSearchMaskPrepared","trim","replace","Suggest__Options","option","nameWithHighlights","regexp","RegExp","match","Array","isArray","nameParts","split","matchIndex","forEach","push","length","Suggest__Option","removeBackslash","InputSuggest","_getOptionsTimeout","state","isGettingOptions","isSuggestWrapperVisible","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","this","setTimeout","setState","valueFormat","minLengthToCallGet","onEnter","keyCode","activeOption","inputWrapper","querySelector","nameFormat","clearTimeout","getOptionsMethod","optionsToShow","stateProps","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","scrollTop","input","InputSuggest__Input","suggestWrapperClass","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","ref","el","onKeyDown","Component","Promise","resolve","fromSuggest","IconCode","points","getStateData","inputPlaceholder","inputValue","getFilteredOptions","inputValuePrepared","filter","test","SelectBox","isSuggestWrapperClosing","isSuggestWrapperOpening","handleIconClick","prevProps","isEqual","inputValueFormat","filteredOptions","newState","optionsProps","calledFromsuggestOpenMethod","notFoundText","iconClass","SelectBox__Icon","SelectBox__Icon_suggest_visible","SelectBox__Input","SelectBox__SuggestWrapper","SelectBox__SuggestWrapper_closing","SelectBox__SuggestWrapper_opening","SelectBox__SuggestWrapper_visible","SelectBox__Suggest","notFound","SelectBox__NotFound","placeholder","INITIAL_STATE","createFormState","address","createFormField","birthday","validations","Validations","required","email","employerName","gender","patronymic","phone","surname","EmployeeInfoForm","useFormState","actions","handleBlur","isValidated","validateState","handleChange","field","changeField","useEffect","autoComplete","onSubmit","isValid","alert"],"mappings":"8RAOA,SAASA,EAAMC,GACb,IACEC,EAQED,EARFC,MACAC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,OACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,QACGC,EARL,YASIR,EATJ,GAWA,EAAgCS,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBA,IAAMC,EAAaC,IAAGC,IAAOC,aAAR,eAClBD,IAAOE,qBAAuBf,IAG3BgB,EAAiBJ,IAAGC,IAAOI,iBAAR,eACtBJ,IAAOK,uBAAyBf,GAASM,IAGtCU,EAAU,2BACXZ,GADW,IAEda,UAAWT,EACXR,MAAOA,GAAS,GAChBC,OA5BF,WACEM,GAAY,GACU,oBAAXN,GACTA,EAAM,WAAN,cA0BFC,SAvBF,SAAsBgB,GACpBhB,EAASgB,EAAEC,OAAOnB,MAAOJ,IAuBzBO,QArBF,WACEI,GAAY,GACW,oBAAZJ,GACTA,EAAO,WAAP,gBAqBJ,OACE,sBAAKc,UAAWP,IAAOf,MAAvB,UACE,wBAAOsB,UAAWP,IAAOU,aAAzB,UACE,sBAAMH,UAAWJ,EAAjB,SAAkCf,KAChCC,GAAQ,qCAAWiB,MAClBjB,GAAQ,cAAC,IAAD,2BAAeiB,GAAf,IAA2BjB,KAAMA,UAE3CF,GAAS,qBAAKoB,UAAWP,IAAOW,aAAvB,SAAsCxB,OAcxDF,EAAM2B,aAAe,CACnBzB,MAAO,KACPE,KAAM,KACNC,MAAO,KACPC,OAAQ,SAACL,KACTM,SAAU,SAACqB,EAAM3B,EAAO4B,KACxBrB,QAAS,SAACP,MAGGD,O,qHChFf,SAAS8B,EAAO7B,GACd,IAAQ8B,EAAqC9B,EAArC8B,SAAUC,EAA2B/B,EAA3B+B,QAAYvB,EAA9B,YAA6CR,EAA7C,GAEMqB,EAAYR,IAAGC,IAAOe,OAAQf,IAAO,kBAAD,OAAmBiB,KAE7D,OACE,kDAAYvB,GAAZ,IAAwBa,UAAWA,EAAnC,SACGS,KAYPD,EAAOH,aAAe,CACpBK,QAAS,WAGIF,O,mBC3BfG,EAAOC,QAAU,CAAC,OAAS,uBAAuB,uBAAyB,uCAAuC,uBAAyB,yC,gCCC3I,4BAEA,SAASC,EAAQlC,GACf,IAAQ8B,EAAa9B,EAAb8B,SAER,OAAO,qBAAKT,UAAWP,IAAOoB,QAAvB,SAAiCJ,IAS1CI,EAAQR,aAAe,CACrBI,SAAU,MAGGI,O,mBCnBfF,EAAOC,QAAU,CAAC,QAAU,0B,kHC0CbE,IAtCf,SAAWnC,GACT,IAAQ8B,EAAkC9B,EAAlC8B,SAAUM,EAAwBpC,EAAxBoC,KAAS5B,EAA3B,YAA0CR,EAA1C,GAEMqB,EAAYR,IAAGC,IAAOqB,EAAGrB,IAAO,UAAD,OAAWsB,KAEhD,OAAa,IAATA,GAAuB,MAATA,EAEd,8CAAQ5B,GAAR,IAAoBa,UAAWA,EAA/B,SACGS,KAIM,IAATM,GAAuB,MAATA,EAEd,8CAAQ5B,GAAR,IAAoBa,UAAWA,EAA/B,SACGS,KAIM,IAATM,GAAuB,MAATA,EAEd,8CAAQ5B,GAAR,IAAoBa,UAAWA,EAA/B,SACGS,KAKA,O,mBC/BTE,EAAOC,QAAU,CAAC,EAAI,kBAAkB,SAAW,yBAAyB,SAAW,yBAAyB,SAAW,2B,mBCA3HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,aAAe,6BAA6B,iBAAmB,iCAAiC,qBAAuB,qCAAqC,aAAe,6BAA6B,mBAAqB,mCAAmC,aAAe,+B,mBCA/TD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,IAAM,sB,mBCAlDD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,gBAAkB,kC,mBCA1ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,aAAe,+B,mBCA/GD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,gBAAkB,mC,mBCAzFD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,oBAAsB,oCAAoC,6BAA+B,6CAA6C,qCAAuC,qDAAqD,qCAAuC,qDAAqD,qCAAuC,qDAAqD,sBAAwB,wC,mBCAhfD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,gBAAkB,gCAAgC,iBAAmB,iCAAiC,0BAA4B,0CAA0C,kCAAoC,kDAAkD,kCAAoC,kDAAkD,kCAAoC,kDAAkD,mBAAqB,mCAAmC,oBAAsB,sC,iECD9iBI,EACJ,SAACC,GAAD,OACA,SAACC,GAAD,IAAQC,EAAR,uDAAgB,EAAGC,EAAnB,uDAA0B,KAA1B,OACEC,MAAM,qFAAD,OACkFJ,EADlF,KAEH,CACEK,QAAS,CACP,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBP,QACAQ,MAAOP,EAAO,CAACA,QAAQQ,EACvBV,YAIHW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OACJA,EAASE,YAAYC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACzCC,GAAID,EACJ7B,KAAM4B,EAAKnD,MACXwB,KAAM2B,SAGTG,OAAM,SAACzD,GAEN,OADA0D,QAAQC,IAAI,QAAS3D,GACd,QAGF4D,EAAexB,EAAc,WAC7ByB,EAAezB,EAAc,SAC7B0B,EAAW1B,EAAc,OACzB2B,EAAiB3B,EAAc,OAC/B4B,EAAc5B,EAAc,O,wCC9BzC,SAAS6B,EAAIlE,GACX,IAAQ8B,EAAa9B,EAAb8B,SAER,OAAO,qBAAKT,UAAWP,IAAOoD,IAAvB,SAA6BpC,IAStCoC,EAAIxC,aAAe,CACjBI,SAAU,MAGGoC,QChBf,SAASC,EAAInE,GACX,IAAQ8B,EAAa9B,EAAb8B,SAER,OAAO,qBAAKT,UAAWP,IAAOqD,IAAvB,SAA6BrC,IAStCqC,EAAIzC,aAAe,CACjBI,SAAU,MAGGqC,Q,uBCEAC,MAtBf,SAAsBpE,GACpB,OACE,sBACEqE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfxD,UAAU,2BAVZ,UAYE,kCAAMyD,EAAE,IAAIC,EAAE,IAAIT,MAAM,KAAKC,OAAO,KAAKS,GAAG,IAAIC,GAAG,KAAQjF,IAC3D,sBAAMkF,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,sBAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAC9B,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,W,iBCPtC,SAASC,EAAUtF,GACjB,OACE,sBAAKqB,UAAWP,IAAOwE,UAAvB,UACE,cAACvF,EAAA,EAAD,2BAAWC,GAAX,IAAkBG,KAAK,gBACvB,qBAAKkB,UAAWP,IAAOyE,gBAAvB,SACE,cAAC,EAAD,SAcRD,EAAU5D,aAAe,CACvBzB,MAAO,KACPE,KAAM,KACNC,MAAO,KACPC,OAAQ,SAACL,KACTM,SAAU,SAACqB,EAAM3B,EAAO4B,KACxBrB,QAAS,SAACP,MAGGsF,Q,yFCjCf,SAASE,EAAOxF,GAAQ,IAAD,EACb8B,EAA0D9B,EAA1D8B,SAAU2B,EAAgDzD,EAAhDyD,GAAIgC,EAA4CzF,EAA5CyF,SAAUC,EAAkC1F,EAAlC0F,QAASC,EAAyB3F,EAAzB2F,QAASC,EAAgB5F,EAAhB4F,YAWlD,IAAMC,EAAiBhF,IAAGC,IAAO0E,QAAR,mBACtB1E,IAAOgF,cAAgBL,GADD,cAEtB3E,IAAOiF,aAAeL,GAFA,IAKzB,OACE,qBACErE,UAAWwE,EACXpC,GAAE,4BAAuBA,GACzBkC,QAjBJ,SAAqBrE,GACnBA,EAAE0E,iBACFL,EAAQlC,IAgBNmC,YAdJ,WACEA,EAAYnC,IASZ,SAMG3B,IAgBP0D,EAAO9D,aAAe,CACpBI,SAAU,KACV2B,GAAI,KACJgC,UAAU,EACVC,SAAS,EACTC,QAAS,SAAClC,KACVmC,YAAa,SAACnC,MAGD+B,Q,iBC/Cf,SAASS,EAAQjG,GACf,IACEkG,EAOElG,EAPFkG,eACAC,EAMEnG,EANFmG,iBACAC,EAKEpG,EALFoG,QACAhG,EAIEJ,EAJFI,MACAiG,EAGErG,EAHFqG,aACA/F,EAEEN,EAFFM,SACAgG,EACEtG,EADFsG,YAIF,SAASC,EAAkB9C,GACzBnD,EAAS8F,EAAQI,MAAK,SAACC,GAAD,OAAOA,EAAEhD,KAAOA,MAGxC,SAASiD,EAAgBjD,GACvB6C,EAAYF,EAAQI,MAAK,SAACC,GAAD,OAAOA,EAAEhD,KAAOA,MAG3C,IAAMkD,EAA2BR,EAC7BA,EACGS,OACAC,QACC,wDACA,QAEJ,KAEJ,OACE,qBAAKxF,UAAWP,IAAOmF,QAAvB,SACE,oBAAI5E,UAAWP,IAAOgG,iBAAtB,SACGV,EAAQ9C,KAAI,SAACyD,GACZ,IAAQtD,EAAkBsD,EAAlBtD,GAAR,EAA0BsD,EAAdpF,YAAZ,MAAmB,GAAnB,EAEIqF,EAAqB,CAACrF,GAC1B,GAAIgF,EAA0B,CAC5B,IAAMM,EAAS,IAAIC,OAAOP,EAA0B,MAC9CQ,EAAQxF,EAAKwF,MAAMF,GAEzB,GAAIG,MAAMC,QAAQF,GAAQ,CACxB,IAAMG,EAAY3F,EAAK4F,MAAMN,GAC7BD,EAAqB,GAErB,IAAIQ,EAAa,EACjBF,EAAUG,SAAQ,SAAChF,GACjBuE,EAAmBU,KAAKjF,GACpB+E,EAAaL,EAAMQ,SACrBX,EAAmBU,KACjB,4BAAqBP,EAAMK,IAAnBA,IAEVA,GAAc,OAMtB,OACE,oBAAanG,UAAWP,IAAO8G,gBAA/B,SACE,cAAC,EAAD,CACEnE,GAAIA,EACJgC,SAAUhC,IAAOyC,EACjBR,QAASjC,IAAOrD,EAChBuF,QAASY,EACTX,YAAac,EALf,SAOGL,EAAaW,EAAoBD,MAR7BtD,UAiCrBwC,EAAQvE,aAAe,CACrBwE,eAAgB,KAChBC,iBAAkB,GAClBC,QAAS,GACThG,MAAO,KACPiG,aAAc,SAAC1E,EAAMoF,GAAP,OAAkBpF,GAChCrB,SAAU,SAACyG,KACXT,YAAa,SAACS,MAGDd,IC3GAA,ED2GAA,E,4JE3FT4B,EAAkB,SAACzH,GAAD,MACL,kBAAVA,EAAqBA,EAAMyG,QAAQ,MAAO,IAAMzG,GAEnD0H,E,kDACJ,WAAY9H,GAAQ,IAAD,8BACjB,cAAMA,IACD+H,mBAAqB,KAE1B,EAAKC,MAAQ,CACX9B,eAAgB,KAChB+B,kBAAkB,EAClBC,yBAAyB,EACzB9B,QAAS,IAGX,EAAK+B,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,oBAAsB,EAAKA,oBAAoBJ,KAAzB,gBAC3B,EAAKK,uBAAyB,EAAKA,uBAAuBL,KAA5B,gBAC9B,EAAKM,eAAiB,EAAKA,eAAeN,KAApB,gBACtB,EAAKO,WAAa,EAAKA,WAAWP,KAAhB,gBAClB,EAAKQ,4BACH,EAAKA,4BAA4BR,KAAjC,gBACF,EAAKS,4BACH,EAAKA,4BAA4BT,KAAjC,gBACF,EAAKU,qBAAuB,EAAKA,qBAAqBV,KAA1B,gBAC5B,EAAKW,aAAe,EAAKA,aAAaX,KAAlB,gBACpB,EAAKY,YAAc,EAAKA,YAAYZ,KAAjB,gBACnB,EAAKa,KAAO,EAAKA,KAAKb,KAAV,gBACZ,EAAKc,MAAQ,EAAKA,MAAMd,KAAX,gBA3BI,E,mDA+BnB,SAAgBpI,GAAQ,IAAD,OACbK,EAAW8I,KAAKnJ,MAAhBK,OACR+I,YAAW,WACT,EAAKL,eACL,EAAKM,SAAS,CAAEnD,eAAgB,KAAME,QAAS,KAC/C/F,EAAOL,KA3CiB,O,+BA+C5B,SAAkBI,GAChB,IAAMkJ,EAAczB,EAAgBzH,GACpC,EAAyC+I,KAAKnJ,MAAtCM,EAAR,EAAQA,SAAUiJ,EAAlB,EAAkBA,mBAClBjJ,EAASgJ,EAAaH,KAAKnJ,OACvBsJ,GAAeA,EAAY3B,QAAU4B,EACvCJ,KAAKT,eAAeY,IAEpBH,KAAKJ,eACLI,KAAKE,SAAS,CAAEnD,eAAgB,KAAME,QAAS,Q,8BAInD,WACE,MAA+C+C,KAAKnJ,MAA5CI,EAAR,EAAQA,MAAOmJ,EAAf,EAAeA,mBAAoBhJ,EAAnC,EAAmCA,QAC/BH,GAASA,EAAMuH,QAAU4B,GAC3BJ,KAAKT,eAAetI,GAEtBG,EAAQ4I,KAAKnJ,S,2BAGf,SAAcsB,GAEZ,GAD6B6H,KAAKnB,MAA1BC,iBAEN,OAAO,EAET,MAA2BkB,KAAKnJ,MAAxBwJ,EAAR,EAAQA,QAASpJ,EAAjB,EAAiBA,MACjB,EAA6D+I,KAAKnB,MAA1D9B,EAAR,EAAQA,eAAgBgC,EAAxB,EAAwBA,wBAAyB9B,EAAjD,EAAiDA,QAEjD,OAAQ9E,EAAEmI,SACR,KA/EW,GAgFTnI,EAAE0E,iBACEkC,GACFiB,KAAKP,8BAEP,MACF,KAtFS,GAuFPtH,EAAE0E,iBACEkC,GACFiB,KAAKN,8BAEP,MACF,KA1FY,GA8FV,GAHAvH,EAAE0E,iBAGEkC,EAAyB,CAC3B,IAAMwB,EAAetD,EAAQI,MAAK,SAACC,GAAD,OAAOA,EAAEhD,KAAOyC,KAE9CwD,EACFP,KAAKX,oBAAoBkB,GAEzBF,EAAQpJ,GAAO,EAAO+I,KAAKnJ,OAE7BmJ,KAAKJ,oBAELS,EAAQpJ,GAAO,EAAO+I,KAAKnJ,OAE7BmJ,KAAKQ,aAAaC,cAAc,SAASX,OAEzC,MACF,KA5GU,GA6GRE,KAAKhB,qB,iCASX,YAA0C,IAApBxG,EAAmB,EAAnBA,KAAmB,IAAbC,YAAa,MAAN,GAAM,EACjCiI,EAAahC,EAAgBlG,GACnC,EAA8BwH,KAAKnJ,MAA3BM,EAAR,EAAQA,SAAUkJ,EAAlB,EAAkBA,QAClBlJ,EAASuJ,EAAYV,KAAKnJ,MAAO4B,GACjC4H,EAAQK,GAAY,EAAMV,KAAKnJ,MAAO4B,K,oCAGxC,YAAgC,IAAP6B,EAAM,EAANA,GACvB0F,KAAKE,SAAS,CAAEnD,eAAgBzC,M,4BAKlC,SAAerD,GAAQ,IAAD,OAChB+I,KAAKpB,oBACP+B,aAAaX,KAAKpB,oBAEpBoB,KAAKpB,mBAAqBqB,YAAW,WACnC,EAAKT,WAAWvI,KAtIY,O,wBA2IhC,SAAWA,GAAQ,IAAD,OAChB+I,KAAKE,SAAS,CAAEpB,kBAAkB,IAClC,MAA4CkB,KAAKnJ,OAEjD+J,EAFA,EAAQA,kBAES3J,EAFjB,EAA0B4J,eAGvB9G,MAAK,SAACkD,GACL,IAAI6D,EAAa,CACf/D,eAAgB,KAChB+B,kBAAkB,EAClB7B,WAEEA,EAAQuB,OAAS,IACnB,EAAKqB,cAGLiB,EAAU,2BACLA,GADK,IAER/D,eAAgBE,EAAQ,GAAG3C,MAG/B,EAAK4F,SAASY,GAAY,WACxB,EAAKnB,6BAGRpF,OAAM,WACL,EAAK2F,SAAS,CACZnD,eAAgB,KAChB+B,kBAAkB,EAClB7B,QAAS,U,yCAKjB,WAA+B,IAAD,OAC5B,EAAoC+C,KAAKnB,MAAjC5B,EAAR,EAAQA,QAASF,EAAjB,EAAiBA,eAEbgE,EAAoB9D,EAAQ+D,WAAU,SAAC1D,GAAD,OAAOA,EAAEhD,KAAOyC,MAC/B,IAAvBgE,EACFA,EAAoB,EACXA,EAAoB,EAAI9D,EAAQuB,SACzCuC,GAAqB,GAEvBf,KAAKE,SAAS,CAAEnD,eAAgBE,EAAQ8D,GAAmBzG,KAAM,WAC/D,EAAKqF,4B,yCAIT,WAA+B,IAAD,OAC5B,EAAoCK,KAAKnB,MAAjC5B,EAAR,EAAQA,QAASF,EAAjB,EAAiBA,eAEbgE,EAAoB9D,EAAQ+D,WAAU,SAAC1D,GAAD,OAAOA,EAAEhD,KAAOyC,KACtDgE,EAAoB,IACtBA,GAAqB,EACrBf,KAAKE,SAAS,CAAEnD,eAAgBE,EAAQ8D,GAAmBzG,KAAM,WAC/D,EAAKqF,6B,kCAKX,WACE,IAAQ5C,EAAmBiD,KAAKnB,MAAxB9B,eACFkE,EAAkBjB,KAAKkB,QAAQT,cAAb,6BACA1D,IAElBoE,EAAiBnB,KAAKoB,QAAQX,cAAc,MAElD,GAAIQ,GAAmBE,EAAgB,CACrC,IAAME,EAAyBJ,EAAgBK,wBACzCC,EAAwBJ,EAAeG,wBACvCE,EAAoBxB,KAAKoB,QAAQE,wBAGjCG,EACJJ,EAAuBK,IAAMF,EAAkBE,IAG3CC,EACJN,EAAuBK,IAAML,EAAuBjG,OACpDoG,EAAkBE,IAAMF,EAAkBpG,OAE5C,GAAIqG,EAA8B,CAEhC,IAAMG,EAAYP,EAAuBK,IAAMH,EAAsBG,IACrE1B,KAAKoB,QAAQQ,UAAYA,OACpB,GAAID,EAAiC,CAE1C,IAAMC,EACJP,EAAuBK,IACvBH,EAAsBG,KACrBF,EAAkBpG,OAASiG,EAAuBjG,QACrD4E,KAAKoB,QAAQQ,UAAYA,M,0BAM/B,WACE5B,KAAKE,SAAS,CACZnD,eAAgB,KAChBgC,yBAAyB,M,yBAI7B,WACEiB,KAAKE,SAAS,CAAEnB,yBAAyB,M,kBAI3C,WACEiB,KAAK6B,MAAM/B,S,mBAGb,WACEE,KAAK6B,MAAM9B,U,oBAGb,WAAU,IAAD,OACP,EAaIC,KAAKnJ,MAZPC,EADF,EACEA,MACAC,EAFF,EAEEA,MAGAE,GALF,EAGEmJ,mBAHF,EAIES,cAJF,EAKE5J,OACAiG,EANF,EAMEA,aAMGjF,GAZL,EAOE2I,iBAPF,EAQE1J,OARF,EASEC,SATF,EAUEkJ,QAVF,EAWEjJ,QAXF,kBAeA,EAA6D4I,KAAKnB,MAA1D9B,EAAR,EAAQA,eAAgBgC,EAAxB,EAAwBA,wBAAyB9B,EAAjD,EAAiDA,QAE3CP,EAAiB/E,IAAOgH,aAExBlH,EAAaE,IAAOmK,oBAEpBC,EAAsBrK,IAAGC,IAAOqK,6BAAR,eAC3BrK,IAAOsK,qCACNlD,GAA2B9B,EAAQuB,OAAS,IAG1C0D,EAAevK,IAAOwK,sBAE5B,OACE,sBACEC,IAAK,SAACC,GAEJ,OADA,EAAKnB,QAAUmB,EACR,EAAKnB,SAEdhJ,UAAWwE,EALb,UAOE,qBACExE,UAAWT,EACX2K,IAAK,SAACC,GAEJ,OADA,EAAK7B,aAAe6B,EACb,EAAK7B,cAJhB,SAOE,cAAC5J,EAAA,EAAD,aACEE,MAAOA,EACPC,MAAOA,EACPqL,IAAK,SAACC,GAEJ,OADA,EAAKR,MAAQQ,EACN,EAAKR,OAEd5K,MAAOA,EACPC,OAAQ8I,KAAKhB,gBACb7H,SAAU6I,KAAKd,kBACf9H,QAAS4I,KAAKb,iBACdmD,UAAWtC,KAAKZ,eACZnH,MAGR,qBAAKC,UAAW6J,EAAhB,SACE,qBACE7J,UAAWgK,EACXE,IAAK,SAACC,GAEJ,OADA,EAAKjB,QAAUiB,EACR,EAAKjB,SAJhB,SAOE,cAAC,EAAD,CACErE,eAAgBA,EAChBC,iBAAkB/F,EAClBgG,QAASA,EACThG,MAAOA,EACPiG,aAAcA,EACd/F,SAAU6I,KAAKX,oBACflC,YAAa6C,KAAKV,oC,GApULiD,aA4V3B5D,EAAapG,aAAe,CAC1BzB,MAAO,KACPC,MAAO,KACPqJ,mBAAoB,EACpBS,cAAe,EACf5J,MAAO,KAEPiG,aAAc,SAAC1E,EAAMoF,GAAP,OAAkBpF,GAChCoI,iBAAkB,SAACxH,EAAOC,GAAR,OAAkBmJ,QAAQC,QAAQ,KACpDvL,OAAQ,SAACL,KACTM,SAAU,SAACqB,EAAM3B,EAAO4B,KACxB4H,QAAS,SAACpJ,EAAOyL,EAAa7L,EAAO4B,KACrCrB,QAAS,SAACP,MAGG8H,Q,iBC3WAgE,OApBf,WACE,OACE,sBACEzH,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfxD,UAAU,uBAVZ,UAYE,0BAAU0K,OAAO,qBACjB,0BAAUA,OAAO,sB,oBCDjBlE,GAAkB,SAACzH,GAAD,MACL,kBAAVA,EAAqBA,EAAMyG,QAAQ,MAAO,IAAMzG,GAEnD4L,GAAe,SAAC,GAAwB,IAAtB5F,EAAqB,EAArBA,QAAShG,EAAY,EAAZA,MACzBsJ,EAAetD,EAAQI,MAAK,SAACC,GAAD,OAAOA,EAAEhD,KAAOrD,KAC5C8F,EAAiBwD,EAAeA,EAAajG,GAAK,KAClDwI,EAAmBvC,EAAeA,EAAa/H,KAAO,GAE5D,MAAO,CAAEuE,iBAAgB+F,mBAAkBC,WADxBrE,GAAgBoE,KAI/BE,GAAqB,SAAC/F,GAA8B,IAArB8F,EAAoB,uDAAP,GAC1CE,EAAqBF,EACxBtF,OACAC,QAAQ,mCAAoC,QAC/C,OAAIuF,EACKhG,EAAQiG,QAAO,SAAC5F,GAAD,OACpB,IAAIS,OAAOkF,EAAoB,MAAME,KAAK7F,EAAE9E,SAGzCyE,GASHmG,G,kDACJ,WAAYvM,GAAQ,IAAD,8BACjB,cAAMA,IACDgI,MAAQ,CACX9B,eAAgB,KAChBgG,WAAY,GACZD,iBAAkB,GAElBO,yBAAyB,EACzBC,yBAAyB,EACzBvE,yBAAyB,GAG3B,EAAKwE,gBAAkB,EAAKA,gBAAgBtE,KAArB,gBACvB,EAAKD,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,oBAAsB,EAAKA,oBAAoBJ,KAAzB,gBAC3B,EAAKK,uBAAyB,EAAKA,uBAAuBL,KAA5B,gBAC9B,EAAKW,aAAe,EAAKA,aAAaX,KAAlB,gBACpB,EAAKY,YAAc,EAAKA,YAAYZ,KAAjB,gBACnB,EAAKQ,4BACH,EAAKA,4BAA4BR,KAAjC,gBACF,EAAKS,4BACH,EAAKA,4BAA4BT,KAAjC,gBACF,EAAKU,qBAAuB,EAAKA,qBAAqBV,KAA1B,gBAzBX,E,qDA6BnB,WACE,MAA4Ce,KAAKnJ,MAAzCkI,+BAAR,SACA,EAAyD8D,GACvD7C,KAAKnJ,OADCkG,EAAR,EAAQA,eAAgB+F,EAAxB,EAAwBA,iBAAkBC,EAA1C,EAA0CA,WAG1C/C,KAAKE,SAAS,CACZnD,iBACA+F,mBACAC,aACAhE,8B,gCAIJ,SAAmByE,GAEjB,MAAoDxD,KAAKnJ,MAAjDI,EAAR,EAAQA,MAAOgG,EAAf,EAAeA,QAAS8B,EAAxB,EAAwBA,wBACxB,GAAIyE,EAAUvM,QAAUA,IAAUwM,IAAQD,EAAUvG,QAASA,GAAU,CACrE,MAAyD4F,GACvD7C,KAAKnJ,OADCkG,EAAR,EAAQA,eAAgB+F,EAAxB,EAAwBA,iBAAkBC,EAA1C,EAA0CA,WAG1C/C,KAAKE,SAAS,CAAEnD,iBAAgB+F,mBAAkBC,eAIhDS,EAAUzE,0BAA4BA,GACxCiB,KAAKE,SAAS,CAAEnB,8B,6BAKpB,SAAgB5G,GACdA,EAAE0E,iBACkCmD,KAAKnB,MAAjCE,yBAENiB,KAAKQ,aAAaC,cAAc,SAASV,U,6BAK7C,WAAmB,IAAD,OAChBC,KAAKE,SAAS,CAAEmD,yBAAyB,IAIzCpD,YAAW,WACT,EAAKL,eACL,IAAQ3I,EAAU,EAAKJ,MAAfI,MACR,EAA6C,EAAK4H,MAA1C9B,EAAR,EAAQA,eAAgB+F,EAAxB,EAAwBA,iBACxB,EAAK5C,SAAS,CACZnD,eAAgB9F,GAAS8F,EACzBgG,WAAYrE,GAAgBoE,GAC5BO,yBAAyB,MAvFH,O,+BA4F5B,SAAkBN,GAAa,IAAD,OACtBW,EAAmBhF,GAAgBqE,GACzC/C,KAAKE,SAAS,CAAE6C,WAAYW,IAAoB,WAC9C,MAA2B,EAAK7M,MAAxBI,EAAR,EAAQA,MAAOgG,EAAf,EAAeA,QAET0G,EAAkBX,GAAmB/F,EAASyG,GACpD,GAA+B,IAA3BC,EAAgBnF,OAClB,OAAO,EAGLvH,IACsC0M,EAAgBtG,MACtD,SAACC,GAAD,OAAOA,EAAEhD,KAAOrD,KAIhB,EAAKiJ,SAAS,CACZnD,eAAgB9F,IAKlB,EAAKiJ,SAAS,CACZnD,eAAgB4G,EAAgB,GAAGrJ,KAKvC,EAAK4F,SAAS,CACZnD,eAAgB4G,EAAgB,GAAGrJ,U,8BAO3C,WAAoB,IAAD,OACjB0F,KAAKE,SAAS,CAAE6C,WAAY,GAAIO,yBAAyB,IACzDtD,KAAKH,cAGLI,YAAW,WACT,EAAKC,SAAS,CAAEoD,yBAAyB,MArIjB,O,2BAyI5B,SAAcnL,GACZ,MAAoD6H,KAAKnB,MAAjDE,EAAR,EAAQA,wBAAyBhC,EAAjC,EAAiCA,eAE3Ba,EAD4BoC,KAAKnJ,MAA/BoG,QACoBI,MAAK,SAACC,GAAD,OAAOA,EAAEhD,KAAOyC,KACjD,OAAQ5E,EAAEmI,SACR,KA5IW,GA6ITnI,EAAE0E,iBACEkC,EACFiB,KAAKP,8BAELO,KAAKH,cAEP,MACF,KArJS,GAsJP1H,EAAE0E,iBACEkC,EACFiB,KAAKN,8BAELM,KAAKH,cAEP,MACF,KA3JY,GA4JNjC,IACFoC,KAAKX,oBAAoB,CAAE/E,GAAIyC,IAC/BiD,KAAKJ,eACLI,KAAKQ,aAAaC,cAAc,SAASX,W,iCASjD,YAA6B,IAAPxF,EAAM,EAANA,IAEpBnD,EADqB6I,KAAKnJ,MAAlBM,UACCmD,EAAI0F,KAAKnJ,S,oCAGpB,YAAgC,IAAPyD,EAAM,EAANA,GACvB0F,KAAKE,SAAS,CAAEnD,eAAgBzC,M,0BAIlC,WACE0F,KAAKE,SAAS,CAAEnB,yBAAyB,M,yBAG3C,WAAe,IAAD,OACZ,EAA2BiB,KAAKnJ,MAAxBoG,EAAR,EAAQA,QAAShG,EAAjB,EAAiBA,MACT8L,EAAe/C,KAAKnB,MAApBkE,WAEFY,EAAkBX,GAAmB/F,EAAS8F,GAEhDa,EAAW,CAAE7E,yBAAyB,QACXjF,IAAV7C,GAAiC,OAAVA,GAA4B,KAAVA,EAIxD0M,EAAgBnF,OAAS,IAC3BoF,EAAQ,2BACHA,GADG,IAEN7G,eAAgB4G,EAAgB,GAAKA,EAAgB,GAAGrJ,GAAK,UAIzBqJ,EAAgBtG,MACtD,SAACC,GAAD,OAAOA,EAAEhD,KAAOrD,OAKhB2M,EAAQ,2BACHA,GADG,IAEN7G,eAAgB4G,EAAgB,GAAKA,EAAgB,GAAGrJ,GAAK,QAKnE0F,KAAKE,SAAS0D,GAAU,WACtB,EAAKjE,sBAAqB,Q,yCAI9B,WAA+B,IAAD,OAC5B,EAAuCK,KAAKnB,MAApCkE,EAAR,EAAQA,WAAYhG,EAApB,EAAoBA,eACH8G,EAAiB7D,KAAKnJ,MAA/BoG,QACFA,EAAU+F,GAAmBa,EAAcd,GACjD,GAAuB,IAAnB9F,EAAQuB,OAAZ,CAIA,IAAIuC,EAAoB9D,EAAQ+D,WAAU,SAAC1D,GAAD,OAAOA,EAAEhD,KAAOyC,MAC/B,IAAvBgE,EACFA,EAAoB,EACXA,EAAoB,EAAI9D,EAAQuB,SACzCuC,GAAqB,GAGvBf,KAAKE,SAAS,CAAEnD,eAAgBE,EAAQ8D,GAAmBzG,KAAM,WAC/D,EAAKqF,6B,yCAIT,WAA+B,IAAD,OAC5B,EAAuCK,KAAKnB,MAApC9B,EAAR,EAAQA,eAAgBgG,EAAxB,EAAwBA,WACPc,EAAiB7D,KAAKnJ,MAA/BoG,QACFA,EAAU+F,GAAmBa,EAAcd,GACjD,GAAuB,IAAnB9F,EAAQuB,OAAZ,CAIA,IAAIuC,EAAoB9D,EAAQ+D,WAAU,SAAC1D,GAAD,OAAOA,EAAEhD,KAAOyC,KACtDgE,EAAoB,IACtBA,GAAqB,EACrBf,KAAKE,SAAS,CAAEnD,eAAgBE,EAAQ8D,GAAmBzG,KAAM,WAC/D,EAAKqF,8B,kCAKX,WAA2D,IAAtCmE,EAAqC,wDAChD/G,EAAmBiD,KAAKnB,MAAxB9B,eACFkE,EAAkBjB,KAAKkB,QAAQT,cAAb,6BACA1D,IAElBoE,EAAiBnB,KAAKoB,QAAQX,cAAc,MAElD,GAAIQ,GAAmBE,EAAgB,CACrC,IAAME,EAAyBJ,EAAgBK,wBACzCC,EAAwBJ,EAAeG,wBACvCE,EAAoBxB,KAAKoB,QAAQE,wBAGjCG,EACJJ,EAAuBK,IAAMF,EAAkBE,IAG3CC,EACJN,EAAuBK,IAAML,EAAuBjG,OACpDoG,EAAkBE,IAAMF,EAAkBpG,OAE5C,GAAI0I,EAA6B,CAE/B,IAAMlC,EACJP,EAAuBK,IACvBH,EAAsBG,KACrBF,EAAkBpG,OAAS,EAAIiG,EAAuBjG,OAAS,GAClE4E,KAAKoB,QAAQQ,UAAYA,OACpB,GAAIH,EAA8B,CAEvC,IAAMG,EAAYP,EAAuBK,IAAMH,EAAsBG,IACrE1B,KAAKoB,QAAQQ,UAAYA,OACpB,GAAID,EAAiC,CAE1C,IAAMC,EACJP,EAAuBK,IACvBH,EAAsBG,KACrBF,EAAkBpG,OAASiG,EAAuBjG,QACrD4E,KAAKoB,QAAQQ,UAAYA,M,oBAK/B,WAAU,IAAD,SACP,EACE5B,KAAKnJ,MADCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAAM+M,EAA5B,EAA4BA,aAAc9G,EAA1C,EAA0CA,QAAShG,EAAnD,EAAmDA,MAAOiG,EAA1D,EAA0DA,aAG1D,EAOI8C,KAAKnB,MANP9B,EADF,EACEA,eACA+F,EAFF,EAEEA,iBACAC,EAHF,EAGEA,WACAM,EAJF,EAIEA,wBACAC,EALF,EAKEA,wBACAvE,EANF,EAMEA,wBAGIrC,EAAiB/E,KAAOyL,UAExBY,EAAYtM,IAAGC,KAAOsM,gBAAR,eACjBtM,KAAOuM,gCAAkCnF,IAGtCtH,EAAaE,KAAOwM,iBAEpBpC,EAAsBrK,IAAGC,KAAOyM,2BAAR,mBAC3BzM,KAAO0M,kCAAoChB,GADhB,cAE3B1L,KAAO2M,kCAAoChB,GAFhB,cAG3B3L,KAAO4M,kCAAoCxF,GAHhB,IAMxBmD,EAAevK,KAAO6M,mBAEtBC,EAAW9M,KAAO+M,oBAElBf,EAAkBX,GAAmB/F,EAAS8F,GAEpD,OACE,sBACEX,IAAK,SAACC,GAEJ,OADA,EAAKnB,QAAUmB,EACR,EAAKnB,SAEdhJ,UAAWwE,EALb,UAOE,qBAAKxE,UAAW8L,EAAWxH,QAASwD,KAAKuD,gBAAzC,SACE,cAAC,GAAD,MAEF,qBACErL,UAAWT,EACX2K,IAAK,SAACC,GAEJ,OADA,EAAK7B,aAAe6B,EACb,EAAK7B,cAJhB,SAOE,cAAC5J,EAAA,EAAD,CACEE,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNC,MAAOoM,EAA0BP,EAAmBC,EACpD4B,YAAa7B,EACb5L,OAAQ8I,KAAKhB,gBACb7H,SAAU6I,KAAKd,kBACf9H,QAAS4I,KAAKb,iBACdmD,UAAWtC,KAAKZ,kBAGpB,qBAAKlH,UAAW6J,EAAhB,SACE,qBACE7J,UAAWgK,EACXE,IAAK,SAACC,GAEJ,OADA,EAAKjB,QAAUiB,EACR,EAAKjB,SAJhB,SAOGuC,EAAgBnF,OAAS,EACxB,cAAC,EAAD,CACEzB,eAAgBA,EAChBC,iBAAkB+F,EAClB9F,QAAS0G,EACT1M,MAAOA,EACPiG,aAAcA,EACd/F,SAAU6I,KAAKX,oBACflC,YAAa6C,KAAKV,yBAGpB,qBAAKpH,UAAWuM,EAAhB,SAA2BV,e,GA1XjBxB,aAwZxBa,GAAU7K,aAAe,CACvBzB,MAAO,KACPC,MAAO,KACPgN,aAAc,uHACd9G,QAAS,GACThG,MAAO,KACPD,KAAM,KACN+H,yBAAyB,EAEzB7B,aAAc,SAAC1E,EAAMoF,GAAP,OAAkBpF,GAChCrB,SAAU,SAACmD,EAAIzD,MAGFuM,UClbTwB,GAAgBC,0BAAgB,CACpCC,QAASC,4BACTC,SAAUD,0BAAgB,CACxBE,YAAa,CAACC,cAAYC,YAE5BC,MAAOL,4BACPM,aAAcN,4BACdO,OAAQP,0BAAgB,CACtBE,YAAa,CAACC,cAAYC,YAE5B3M,KAAMuM,0BAAgB,CACpBE,YAAa,CAACC,cAAYC,YAE5BI,WAAYR,4BACZS,MAAOT,4BACPU,QAASV,0BAAgB,CACvBE,YAAa,CAACC,cAAYC,cA+LfO,UA3Lf,WACE,MAAyBC,uBAAaf,IAAtC,mBAAO/F,EAAP,KAAc+G,EAAd,KAUA,SAASC,IACHhH,EAAMiH,aACRF,EAAQG,cAAclH,GAG1B,SAASmH,EAAa/O,EAAtB,GAA+C,IAAVgP,EAAS,EAAfzN,KAC7BoN,EAAQM,YAAYD,EAAOhP,GAU7B,OAvBAkP,qBAAU,WACJtH,EAAMiH,aACRF,EAAQG,cAAclH,KAEvB,CAACA,EAAMyG,OAAOrO,QAoBf,cAAC,oBAAD,CAAmB4H,MAAOA,EAA1B,SACE,uBAAMuH,aAAa,MAAMC,SAV7B,SAAsBlO,GACpBA,EAAE0E,iBACqB+I,EAAQG,cAAclH,GAC1ByH,WACjBC,MAAM,wBAMN,UACE,cAACvN,EAAA,EAAD,CAAGC,KAAK,IAAR,8IACA,cAAC,YAAD,CAAWgN,MAAOpH,EAAM4G,QAAxB,SACG,SAACxO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACP8J,iBAAkB9F,EAClB/D,MAAM,+CACNyB,KAAK,UACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,SAKlB,cAAC,YAAD,CAAWC,MAAOpH,EAAMrG,KAAxB,SACG,SAACvB,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACP8J,iBAAkBhG,EAClB7D,MAAM,uBACNyB,KAAK,OACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,SAKlB,cAAC,YAAD,CAAWC,MAAOpH,EAAM0G,WAAxB,SACG,SAACtO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACP8J,iBAAkB/F,EAClB9D,MAAM,mDACNyB,KAAK,aACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,SAKlB,eAAC,EAAD,WACE,cAAC,EAAD,UACE,cAAC,YAAD,CAAWC,MAAOpH,EAAMyG,OAAxB,SACG,SAACrO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,GAAD,CACEjC,MAAOA,EACPC,MAAM,uBACNyB,KAAK,SACLyE,QAAS,CACP,CAAE3C,GAAI,OAAQ9B,KAAM,8CACpB,CAAE8B,GAAI,SAAU9B,KAAM,+CAExBvB,MAAOA,EACPE,SAAU6O,WAMpB,cAAC,EAAD,UACE,cAAC,YAAD,CAAWC,MAAOpH,EAAMmG,SAAxB,SACG,SAAC/N,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACPC,MAAM,8EACNyB,KAAK,WACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,WAMpB,cAAC,EAAD,UACE,cAAC,YAAD,CAAWC,MAAOpH,EAAM2G,MAAxB,SACG,SAACvO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAACnC,EAAA,EAAD,CACEE,MAAOA,EACPC,MAAM,sGACNC,KAAK,qBACLwB,KAAK,QACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,WAMpB,cAAC,EAAD,UACE,cAAC,YAAD,CAAWC,MAAOpH,EAAMuG,MAAxB,SACG,SAACnO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAACnC,EAAA,EAAD,CACEE,MAAOA,EACPC,MAAM,QACNyB,KAAK,QACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,cAOtB,cAAC,YAAD,CAAWC,MAAOpH,EAAMiG,QAAxB,SACG,SAAC7N,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACP8J,iBAAkBlG,EAClB3D,MAAM,iKACNyB,KAAK,UACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,SAKlB,cAAC,YAAD,CAAWC,MAAOpH,EAAMwG,aAAxB,SACG,SAACpO,EAAD,OAAUH,EAAV,EAAUA,MAAV,OACC,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,CACEjC,MAAOA,EACP8J,iBAAkBjG,EAClB5D,MAAM,oJACNyB,KAAK,eACLvB,MAAOA,EACPC,OAAQ2O,EACR1O,SAAU6O,SAKlB,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAACtN,EAAA,EAAD,CAAQE,QAAQ,UAAhB","file":"static/js/3.f8745ed8.chunk.js","sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction Input(props) {\n  const {\n    error,\n    label,\n    mask,\n    value,\n    onBlur,\n    onChange,\n    onFocus,\n    ...otherProps\n  } = props\n\n  const [hasFocus, setHasFocus] = useState(false)\n\n  // Handlers\n  function handleBlur(...args) {\n    setHasFocus(false)\n    if (typeof onBlur === 'function') {\n      onBlur(...args)\n    }\n  }\n  function handleChange(e) {\n    onChange(e.target.value, props)\n  }\n  function handleFocus(...args) {\n    setHasFocus(true)\n    if (typeof onFocus === 'function') {\n      onFocus(...args)\n    }\n  }\n\n  const inputClass = cn(styles.Input__Input, {\n    [styles.Input__Input_error]: !!error,\n  })\n\n  const labelTextClass = cn(styles.Input__LabelText, {\n    [styles.Input__LabelText_top]: !!value || hasFocus,\n  })\n\n  const inputProps = {\n    ...otherProps,\n    className: inputClass,\n    value: value || '',\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n  }\n\n  return (\n    <div className={styles.Input}>\n      <label className={styles.Input__Label}>\n        <span className={labelTextClass}>{label}</span>\n        {!mask && <input {...inputProps} />}\n        {!!mask && <InputMask {...inputProps} mask={mask} />}\n      </label>\n      {!!error && <div className={styles.Input__Error}>{error}</div>}\n    </div>\n  )\n}\n\nInput.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  mask: PropTypes.string,\n  value: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\nInput.defaultProps = {\n  error: null,\n  mask: null,\n  value: null,\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default Input\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction Button(props) {\n  const { children, variant, ...otherProps } = props\n\n  const className = cn(styles.Button, styles[`Button_variant_${variant}`])\n\n  return (\n    <button {...otherProps} className={className}>\n      {children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  variant: PropTypes.oneOf(['default', 'primary']),\n}\nButton.defaultProps = {\n  variant: 'default',\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles_Button__1Ekk8\",\"Button_variant_default\":\"styles_Button_variant_default__3GtCQ\",\"Button_variant_primary\":\"styles_Button_variant_primary__G0dsg\"};","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction FormRow(props) {\n  const { children } = props\n\n  return <div className={styles.FormRow}>{children}</div>\n}\n\nFormRow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nFormRow.defaultProps = {\n  children: null,\n}\n\nexport default FormRow\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormRow\":\"styles_FormRow__1xnvt\"};","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction H(props) {\n  const { children, size, ...otherProps } = props\n\n  const className = cn(styles.H, styles[`H_size_${size}`])\n\n  if (size === 1 || size === '1') {\n    return (\n      <h1 {...otherProps} className={className}>\n        {children}\n      </h1>\n    )\n  }\n  if (size === 2 || size === '2') {\n    return (\n      <h2 {...otherProps} className={className}>\n        {children}\n      </h2>\n    )\n  }\n  if (size === 3 || size === '3') {\n    return (\n      <h3 {...otherProps} className={className}>\n        {children}\n      </h3>\n    )\n  }\n\n  return null\n}\n\nH.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  size: PropTypes.oneOf([1, '1', 2, '2', 3, '3']).isRequired,\n}\n\nexport default H\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"H\":\"styles_H__10j-W\",\"H_size_1\":\"styles_H_size_1__DLwdi\",\"H_size_2\":\"styles_H_size_2__2d1Lt\",\"H_size_3\":\"styles_H_size_3__2RHfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"styles_Input__18MvC\",\"Input__Label\":\"styles_Input__Label__3eMsY\",\"Input__LabelText\":\"styles_Input__LabelText__1pkll\",\"Input__LabelText_top\":\"styles_Input__LabelText_top__3UohT\",\"Input__Input\":\"styles_Input__Input__25z1j\",\"Input__Input_error\":\"styles_Input__Input_error__161xf\",\"Input__Error\":\"styles_Input__Error__2huak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"styles_Row__3p-fl\",\"Col\":\"styles_Col__2F8Kj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputDate\":\"styles_InputDate__3Gfzb\",\"InputDate__Icon\":\"styles_InputDate__Icon__3m_hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"option_Option__3hi2U\",\"Option_active\":\"option_Option_active__1-Hnb\",\"Option_value\":\"option_Option_value__1F3n1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Suggest__Options\":\"suggest_Suggest__Options__3X_hr\",\"Suggest__Option\":\"suggest_Suggest__Option__1Dcnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectBox\":\"styles_SelectBox__LuOVi\",\"SelectBox__Icon\":\"styles_SelectBox__Icon__lA4Ro\",\"SelectBox__Input\":\"styles_SelectBox__Input__1FBQJ\",\"SelectBox__SuggestWrapper\":\"styles_SelectBox__SuggestWrapper__bEbpj\",\"SelectBox__SuggestWrapper_closing\":\"styles_SelectBox__SuggestWrapper_closing__35bL_\",\"SelectBox__SuggestWrapper_opening\":\"styles_SelectBox__SuggestWrapper_opening__2fO9S\",\"SelectBox__SuggestWrapper_visible\":\"styles_SelectBox__SuggestWrapper_visible__1ghg9\",\"SelectBox__Suggest\":\"styles_SelectBox__Suggest__2xZYZ\",\"SelectBox__NotFound\":\"styles_SelectBox__NotFound__3wWgH\"};","const getDadataCall =\n  (type) =>\n  (query, count = 5, part = null) =>\n    fetch(\n      `https://front-dhr-st1.dhr-st.dc-yc.b-pl.pro/dadata/suggestions/api/4_1/rs/suggest/${type}/`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          count,\n          parts: part ? [part] : undefined,\n          query,\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        response.suggestions.map((item, index) => ({\n          id: index,\n          name: item.value,\n          data: item,\n        }))\n      )\n      .catch((error) => {\n        console.log('error', error)\n        return []\n      })\n\nexport const getAddresses = getDadataCall('address')\nexport const getCompanies = getDadataCall('party')\nexport const getNames = getDadataCall('fio', 'NAME')\nexport const getPatronymics = getDadataCall('fio', 'PATRONYMIC')\nexport const getSurnames = getDadataCall('fio', 'SURNAME')\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction Col(props) {\n  const { children } = props\n\n  return <div className={styles.Col}>{children}</div>\n}\n\nCol.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nCol.defaultProps = {\n  children: null,\n}\n\nexport default Col\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction Row(props) {\n  const { children } = props\n\n  return <div className={styles.Row}>{children}</div>\n}\n\nRow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nRow.defaultProps = {\n  children: null,\n}\n\nexport default Row\n","function IconCalendar(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather feather-calendar\"\n    >\n      <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" {...props}></rect>\n      <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n      <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n      <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n    </svg>\n  )\n}\n\nexport default IconCalendar\n","import PropTypes from 'prop-types'\n\n// Components\nimport Input from '../Input'\n\n// Icons\nimport IconCalendar from '../../icons/IconCalendar'\n\nimport styles from './styles.module.scss'\n\nfunction InputDate(props) {\n  return (\n    <div className={styles.InputDate}>\n      <Input {...props} mask=\"99.99.9999\" />\n      <div className={styles.InputDate__Icon}>\n        <IconCalendar />\n      </div>\n    </div>\n  )\n}\n\nInputDate.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\nInputDate.defaultProps = {\n  error: null,\n  mask: null,\n  value: null,\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputDate\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './option.module.scss'\n\nfunction Option(props) {\n  const { children, id, isActive, isValue, onClick, onMouseOver } = props\n\n  // Handlers\n  function handleClick(e) {\n    e.preventDefault()\n    onClick(id)\n  }\n  function handleMouseOver() {\n    onMouseOver(id)\n  }\n\n  const componentClass = cn(styles.Option, {\n    [styles.Option_active]: isActive,\n    [styles.Option_value]: isValue,\n  })\n\n  return (\n    <div\n      className={componentClass}\n      id={`select_box_option_${id}`}\n      onClick={handleClick}\n      onMouseOver={handleMouseOver}\n    >\n      {children}\n    </div>\n  )\n}\n\nOption.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  isActive: PropTypes.bool,\n  isValue: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n}\nOption.defaultProps = {\n  children: null,\n  id: null,\n  isActive: false,\n  isValue: false,\n  onClick: (id) => {},\n  onMouseOver: (id) => {},\n}\n\nexport default Option\n","import PropTypes from 'prop-types'\n\n// Components\nimport Option from './option'\n\nimport styles from './suggest.module.scss'\n\nfunction Suggest(props) {\n  const {\n    activeOptionId,\n    optionSearchMask,\n    options,\n    value,\n    formatOption,\n    onChange,\n    onItemHover,\n  } = props\n\n  // Handlers\n  function handleOptionClick(id) {\n    onChange(options.find((o) => o.id === id))\n  }\n\n  function handleMouseOver(id) {\n    onItemHover(options.find((o) => o.id === id))\n  }\n\n  const optionSearchMaskPrepared = optionSearchMask\n    ? optionSearchMask\n        .trim()\n        .replace(\n          /(\\*|\\.|\\+|\\{|\\}|\\(|\\)|\\$|\\?|\\^|\\[|\\]|;|:|,|\\/|-|_|=)/g,\n          '\\\\$1'\n        )\n    : null\n\n  return (\n    <div className={styles.Suggest}>\n      <ul className={styles.Suggest__Options}>\n        {options.map((option) => {\n          const { id, name = '' } = option\n\n          let nameWithHighlights = [name]\n          if (optionSearchMaskPrepared) {\n            const regexp = new RegExp(optionSearchMaskPrepared, 'ig')\n            const match = name.match(regexp)\n\n            if (Array.isArray(match)) {\n              const nameParts = name.split(regexp)\n              nameWithHighlights = []\n\n              let matchIndex = 0\n              nameParts.forEach((part) => {\n                nameWithHighlights.push(part)\n                if (matchIndex < match.length) {\n                  nameWithHighlights.push(\n                    <i key={matchIndex}>{match[matchIndex]}</i>\n                  )\n                  matchIndex += 1\n                }\n              })\n            }\n          }\n\n          return (\n            <li key={id} className={styles.Suggest__Option}>\n              <Option\n                id={id}\n                isActive={id === activeOptionId}\n                isValue={id === value}\n                onClick={handleOptionClick}\n                onMouseOver={handleMouseOver}\n              >\n                {formatOption(nameWithHighlights, option)}\n              </Option>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nSuggest.propTypes = {\n  activeOptionId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionSearchMask: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.shape({}),\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      name: PropTypes.string,\n    })\n  ),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  formatOption: PropTypes.func,\n  onChange: PropTypes.func,\n  onItemHover: PropTypes.func,\n}\nSuggest.defaultProps = {\n  activeOptionId: null,\n  optionSearchMask: '',\n  options: [],\n  value: null,\n  formatOption: (name, option) => name,\n  onChange: (option) => {},\n  onItemHover: (option) => {},\n}\n\nexport default Suggest\n","import Suggest from './suggest'\nexport default Suggest\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","function IconCode() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather feather-code\"\n    >\n      <polyline points=\"16 18 22 12 16 6\"></polyline>\n      <polyline points=\"8 6 2 12 8 18\"></polyline>\n    </svg>\n  )\n}\n\nexport default IconCode\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\nimport isEqual from 'lodash.isequal'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\n// Icons\nimport IconCode from '../../icons/IconCode'\n\nimport styles from './styles.module.scss'\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nconst getStateData = ({ options, value }) => {\n  const activeOption = options.find((o) => o.id === value)\n  const activeOptionId = activeOption ? activeOption.id : null\n  const inputPlaceholder = activeOption ? activeOption.name : ''\n  const inputValue = removeBackslash(inputPlaceholder)\n  return { activeOptionId, inputPlaceholder, inputValue }\n}\n\nconst getFilteredOptions = (options, inputValue = '') => {\n  const inputValuePrepared = inputValue\n    .trim()\n    .replace(/(\\*|\\.|\\+|\\{|\\}|\\(|\\)|\\$|\\?|\\^)/g, '\\\\$1')\n  if (inputValuePrepared) {\n    return options.filter((o) =>\n      new RegExp(inputValuePrepared, 'ig').test(o.name)\n    )\n  }\n  return options\n}\n\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_OPENING_DELAY = 200\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\n\nclass SelectBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeOptionId: null,\n      inputValue: '',\n      inputPlaceholder: '',\n      // these props need to make a special className modifiers for 200ms opening/closing delay\n      isSuggestWrapperClosing: false,\n      isSuggestWrapperOpening: false,\n      isSuggestWrapperVisible: false,\n    }\n\n    this.handleIconClick = this.handleIconClick.bind(this)\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n  }\n\n  // Life Cycle\n  componentDidMount() {\n    const { isSuggestWrapperVisible = false } = this.props\n    const { activeOptionId, inputPlaceholder, inputValue } = getStateData(\n      this.props\n    )\n    this.setState({\n      activeOptionId,\n      inputPlaceholder,\n      inputValue,\n      isSuggestWrapperVisible,\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    // Изменился value или options извне\n    const { value, options, isSuggestWrapperVisible } = this.props\n    if (prevProps.value !== value || !isEqual(prevProps.options, options)) {\n      const { activeOptionId, inputPlaceholder, inputValue } = getStateData(\n        this.props\n      )\n      this.setState({ activeOptionId, inputPlaceholder, inputValue })\n    }\n\n    // Изменилась видимость саджеста извне\n    if (prevProps.isSuggestWrapperVisible !== isSuggestWrapperVisible) {\n      this.setState({ isSuggestWrapperVisible }) // eslint-disable-line\n    }\n  }\n\n  // Icon handlers\n  handleIconClick(e) {\n    e.preventDefault()\n    const { isSuggestWrapperVisible } = this.state\n    if (!isSuggestWrapperVisible) {\n      this.inputWrapper.querySelector('input').focus()\n    }\n  }\n\n  // Input handlers\n  handleInputBlur() {\n    this.setState({ isSuggestWrapperClosing: true })\n\n    // timeout нужен, чтобы успеть обработать клик по option ДО ТОГО,\n    // как он скроется из-за события input onblur\n    setTimeout(() => {\n      this.suggestClose()\n      const { value } = this.props\n      const { activeOptionId, inputPlaceholder } = this.state\n      this.setState({\n        activeOptionId: value || activeOptionId,\n        inputValue: removeBackslash(inputPlaceholder),\n        isSuggestWrapperClosing: false,\n      })\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(inputValue) {\n    const inputValueFormat = removeBackslash(inputValue)\n    this.setState({ inputValue: inputValueFormat }, () => {\n      const { value, options } = this.props\n\n      const filteredOptions = getFilteredOptions(options, inputValueFormat)\n      if (filteredOptions.length === 0) {\n        return false\n      }\n\n      if (value) {\n        const isFilteredOptionsContainValue = !!filteredOptions.find(\n          (o) => o.id === value\n        )\n        if (isFilteredOptionsContainValue) {\n          // Выделяем выбранную опцию\n          this.setState({\n            activeOptionId: value,\n          })\n        } else {\n          // Выделяем первую опцию, если значения контрола (value)\n          // НЕТ в списке отсортированных опций (filteredOptions)\n          this.setState({\n            activeOptionId: filteredOptions[0].id,\n          })\n        }\n      } else {\n        // Выделяем первую опцию, если ничего не выбрано\n        this.setState({\n          activeOptionId: filteredOptions[0].id,\n        })\n      }\n      return undefined\n    })\n  }\n\n  handleInputFocus() {\n    this.setState({ inputValue: '', isSuggestWrapperOpening: true })\n    this.suggestOpen()\n\n    // timeout нужен для того, чтобы задать контролу класс opening на некоторое время (200ms)\n    setTimeout(() => {\n      this.setState({ isSuggestWrapperOpening: false })\n    }, SUGGEST_OPENING_DELAY)\n  }\n\n  handleKeyDown(e) {\n    const { isSuggestWrapperVisible, activeOptionId } = this.state\n    const { options: optionsProps } = this.props\n    const option = optionsProps.find((o) => o.id === activeOptionId)\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        } else {\n          this.suggestOpen()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        } else {\n          this.suggestOpen()\n        }\n        break\n      case KEY_ENTER:\n        if (option) {\n          this.handleSuggestChange({ id: activeOptionId })\n          this.suggestClose()\n          this.inputWrapper.querySelector('input').blur()\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ id }) {\n    const { onChange } = this.props\n    onChange(id, this.props)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  // Methods\n  suggestClose() {\n    this.setState({ isSuggestWrapperVisible: false })\n  }\n\n  suggestOpen() {\n    const { options, value } = this.props\n    const { inputValue } = this.state\n\n    const filteredOptions = getFilteredOptions(options, inputValue)\n\n    let newState = { isSuggestWrapperVisible: true }\n    const isValueEmpty = value === undefined || value === null || value === ''\n\n    if (isValueEmpty) {\n      // Выделяем первую опцию, если ничего не выбрано\n      if (filteredOptions.length > 0) {\n        newState = {\n          ...newState,\n          activeOptionId: filteredOptions[0] ? filteredOptions[0].id : null,\n        }\n      }\n    } else {\n      const isFilteredOptionsContainValue = !!filteredOptions.find(\n        (o) => o.id === value\n      )\n      // Выделяем первую опцию, если значения контрола (value)\n      // НЕТ в списке отсортированных опций (filteredOptions)\n      if (!isFilteredOptionsContainValue) {\n        newState = {\n          ...newState,\n          activeOptionId: filteredOptions[0] ? filteredOptions[0].id : null,\n        }\n      }\n    }\n\n    this.setState(newState, () => {\n      this.scrollToActiveOption(true)\n    })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { inputValue, activeOptionId } = this.state\n    const { options: optionsProps } = this.props\n    const options = getFilteredOptions(optionsProps, inputValue)\n    if (options.length === 0) {\n      return\n    }\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { activeOptionId, inputValue } = this.state\n    const { options: optionsProps } = this.props\n    const options = getFilteredOptions(optionsProps, inputValue)\n    if (options.length === 0) {\n      return\n    }\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption(calledFromsuggestOpenMethod = false) {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (calledFromsuggestOpenMethod) {\n        // прокручиваем активный элемент К СЕРЕДИНЕ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height / 2 - activeOptionClientRect.height / 2)\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  render() {\n    const { error, label, mask, notFoundText, options, value, formatOption } =\n      this.props\n\n    const {\n      activeOptionId,\n      inputPlaceholder,\n      inputValue,\n      isSuggestWrapperClosing,\n      isSuggestWrapperOpening,\n      isSuggestWrapperVisible,\n    } = this.state\n\n    const componentClass = styles.SelectBox\n\n    const iconClass = cn(styles.SelectBox__Icon, {\n      [styles.SelectBox__Icon_suggest_visible]: isSuggestWrapperVisible,\n    })\n\n    const inputClass = styles.SelectBox__Input\n\n    const suggestWrapperClass = cn(styles.SelectBox__SuggestWrapper, {\n      [styles.SelectBox__SuggestWrapper_closing]: isSuggestWrapperClosing,\n      [styles.SelectBox__SuggestWrapper_opening]: isSuggestWrapperOpening,\n      [styles.SelectBox__SuggestWrapper_visible]: isSuggestWrapperVisible,\n    })\n\n    const suggestClass = styles.SelectBox__Suggest\n\n    const notFound = styles.SelectBox__NotFound\n\n    const filteredOptions = getFilteredOptions(options, inputValue)\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div className={iconClass} onClick={this.handleIconClick}>\n          <IconCode />\n        </div>\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            mask={mask}\n            value={isSuggestWrapperClosing ? inputPlaceholder : inputValue}\n            placeholder={inputPlaceholder}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            {filteredOptions.length > 0 ? (\n              <Suggest\n                activeOptionId={activeOptionId}\n                optionSearchMask={inputValue}\n                options={filteredOptions}\n                value={value}\n                formatOption={formatOption}\n                onChange={this.handleSuggestChange}\n                onItemHover={this.handleSuggestItemHover}\n              />\n            ) : (\n              <div className={notFound}>{notFoundText}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSelectBox.propTypes = {\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  label: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  notFoundText: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      name: PropTypes.string,\n    })\n  ),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  mask: PropTypes.string,\n  isSuggestWrapperVisible: PropTypes.bool,\n  formatOption: PropTypes.func,\n  onChange: PropTypes.func,\n}\n\nSelectBox.defaultProps = {\n  error: null,\n  label: null,\n  notFoundText: 'Совпадений не найдено',\n  options: [],\n  value: null,\n  mask: null,\n  isSuggestWrapperVisible: false,\n\n  formatOption: (name, option) => name, // eslint-disable-line no-unused-vars\n  onChange: (id, props) => {}, // eslint-disable-line no-unused-vars\n}\n\nexport default SelectBox\n","import { useEffect } from 'react'\n\nimport {\n  createFormField,\n  createFormState,\n  FormField,\n  FormStateProvider,\n  useFormState,\n  Validations,\n} from '@balance-pl/form-state'\n\n// API\nimport {\n  getAddresses,\n  getCompanies,\n  getNames,\n  getPatronymics,\n  getSurnames,\n} from '../../api/dadata'\n\n// Components\nimport Button from '../../components/Button'\nimport FormRow from '../../components/FormRow'\nimport { Col, Row } from '../../components/Grid'\nimport H from '../../components/H'\nimport Input from '../../components/Input'\nimport InputDate from '../../components/InputDate'\nimport InputSuggest from '../../components/InputSuggest'\nimport SelectBox from '../../components/SelectBox'\n\nconst INITIAL_STATE = createFormState({\n  address: createFormField(),\n  birthday: createFormField({\n    validations: [Validations.required],\n  }),\n  email: createFormField(),\n  employerName: createFormField(),\n  gender: createFormField({\n    validations: [Validations.required],\n  }),\n  name: createFormField({\n    validations: [Validations.required],\n  }),\n  patronymic: createFormField(),\n  phone: createFormField(),\n  surname: createFormField({\n    validations: [Validations.required],\n  }),\n})\n\nfunction EmployeeInfoForm() {\n  const [state, actions] = useFormState(INITIAL_STATE)\n\n  // Effects\n  useEffect(() => {\n    if (state.isValidated) {\n      actions.validateState(state)\n    }\n  }, [state.gender.value])\n\n  // Handlers\n  function handleBlur() {\n    if (state.isValidated) {\n      actions.validateState(state)\n    }\n  }\n  function handleChange(value, { name: field }) {\n    actions.changeField(field, value)\n  }\n  function handleSubmit(e) {\n    e.preventDefault()\n    const validatedState = actions.validateState(state)\n    if (validatedState.isValid()) {\n      alert('Sending the form...')\n    }\n  }\n\n  return (\n    <FormStateProvider state={state}>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <H size=\"1\">Информация о сотруднике</H>\n        <FormField field={state.surname}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getSurnames}\n                label=\"Фамилия *\"\n                name=\"surname\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.name}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getNames}\n                label=\"Имя *\"\n                name=\"name\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.patronymic}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getPatronymics}\n                label=\"Отчество\"\n                name=\"patronymic\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <Row>\n          <Col>\n            <FormField field={state.gender}>\n              {(value, { error }) => (\n                <FormRow>\n                  <SelectBox\n                    error={error}\n                    label=\"Пол *\"\n                    name=\"gender\"\n                    options={[\n                      { id: 'male', name: 'мужской' },\n                      { id: 'female', name: 'женский' },\n                    ]}\n                    value={value}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              )}\n            </FormField>\n          </Col>\n          <Col>\n            <FormField field={state.birthday}>\n              {(value, { error }) => (\n                <FormRow>\n                  <InputDate\n                    error={error}\n                    label=\"Дата рождения *\"\n                    name=\"birthday\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              )}\n            </FormField>\n          </Col>\n          <Col>\n            <FormField field={state.phone}>\n              {(value, { error }) => (\n                <FormRow>\n                  <Input\n                    error={error}\n                    label=\"Мобильный телефон *\"\n                    mask=\"+7 (999) 999-99-99\"\n                    name=\"phone\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              )}\n            </FormField>\n          </Col>\n          <Col>\n            <FormField field={state.email}>\n              {(value, { error }) => (\n                <FormRow>\n                  <Input\n                    error={error}\n                    label=\"Email\"\n                    name=\"email\"\n                    value={value}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </FormRow>\n              )}\n            </FormField>\n          </Col>\n        </Row>\n        <FormField field={state.address}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getAddresses}\n                label=\"Адрес постоянной регистрации\"\n                name=\"address\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <FormField field={state.employerName}>\n          {(value, { error }) => (\n            <FormRow>\n              <InputSuggest\n                error={error}\n                getOptionsMethod={getCompanies}\n                label=\"Наименование работодателя\"\n                name=\"employerName\"\n                value={value}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n            </FormRow>\n          )}\n        </FormField>\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\">Сохранить</Button>\n          </Col>\n        </Row>\n      </form>\n    </FormStateProvider>\n  )\n}\n\nexport default EmployeeInfoForm\n"],"sourceRoot":""}